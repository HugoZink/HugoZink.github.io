<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Security 4 Portfolio - Hugo Zink &amp; Daniel van Bavel</title>
    <link>https://hugozink.github.io/posts/</link>
    <description>Recent content in Posts on Security 4 Portfolio - Hugo Zink &amp; Daniel van Bavel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 07 Mar 2018 13:08:58 +0100</lastBuildDate>
    
	<atom:link href="https://hugozink.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Opdracht 4</title>
      <link>https://hugozink.github.io/posts/opdr4/</link>
      <pubDate>Wed, 07 Mar 2018 13:08:58 +0100</pubDate>
      
      <guid>https://hugozink.github.io/posts/opdr4/</guid>
      <description>Met de hands-on kennis die wij hebben verkregen uit Opdracht 2, zijn wij begonnen aan Opdracht 4. Deze opdracht ging over cryptocurrency. De opzet was om een fictieve cryptocurrency zelf te gaan implementeren. Deze currency kreeg de naam &amp;ldquo;Scroogecoin&amp;rdquo;. Het idee is dat er een centrale autoriteit is, genaamd &amp;ldquo;Scrooge&amp;rdquo;. Deze autoriteit krijgt transacties binnen. Onze taak was om de logica van het ontvangen van de transacties te gaan implementeren. De transacties zijn georganiseerd in tijdsperiodes, of &amp;ldquo;blokken&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Opdracht 3</title>
      <link>https://hugozink.github.io/posts/opdr3/</link>
      <pubDate>Wed, 07 Mar 2018 13:08:57 +0100</pubDate>
      
      <guid>https://hugozink.github.io/posts/opdr3/</guid>
      <description>Voor opdracht 3 moesten wij onze DFD&amp;rsquo;s uit Opdracht 1 pakken als basis. Onze Level 0 DFD gingen wij verder uitwerken in de Threat Modeling Tool van Microsoft. Via deze DFD kon de tool automatisch potentiële dreigingen aangeven. Onze taak was om een aantal van deze dreigingen uit te zoeken, en hier maatregelen tegen te ondernemen. Deze maatregelen zouden dan de kwetsbaarheden van onze applicatie oplossen.
Wij hebben 6 van deze threats uitgezocht die wij het belangrijkste vonden, en hier fatsoenlijke tegenmaatregelen voor geïmplementeerd.</description>
    </item>
    
    <item>
      <title>Opdracht 2</title>
      <link>https://hugozink.github.io/posts/opdr2/</link>
      <pubDate>Wed, 07 Mar 2018 13:08:54 +0100</pubDate>
      
      <guid>https://hugozink.github.io/posts/opdr2/</guid>
      <description>&lt;h2 id=&#34;1-sniffing-at-rsa&#34;&gt;1.Sniffing at RSA&lt;/h2&gt;

&lt;p&gt;Het begin van opdracht 2 begon met een kennismaking over priem getallen. Door een zo hoog mogelijk priem getal te nemen des te kleiner de kans was dat de encryptie te kraken is.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Opdracht 1</title>
      <link>https://hugozink.github.io/posts/opdr1/</link>
      <pubDate>Wed, 07 Mar 2018 12:45:16 +0100</pubDate>
      
      <guid>https://hugozink.github.io/posts/opdr1/</guid>
      <description>In periode 2.1 hebben wij een project gedaan voor Serverside web development. Dit project is in 2.2 voortgezet voor Single page application development.
De bedoeling was om DFD&amp;rsquo;s te maken voor onze applicatie, eentje op Context Level en de andere op Level 0. Om deze te realiseren, hebben wij use case diagrammen gemaakt, om deze DFD&amp;rsquo;s beter context te kunnen geven.
Ook hebben wij een beknopt Deployment Diagram gemaakt, om beter te visualiseren hoe onze applicatie in elkaar zit.</description>
    </item>
    
  </channel>
</rss>